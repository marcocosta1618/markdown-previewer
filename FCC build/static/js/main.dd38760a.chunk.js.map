{"version":3,"sources":["components/Footer.js","components/Parser.js","components/initialize.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","marked","require","setOptions","gfm","breaks","headerIds","Parser","props","state","input","localStorage","userInput","handleChange","event","setState","target","value","setItem","resetText","className","htmlFor","onClick","this","id","onChange","markdown","__html","Component","Preview","dangerouslySetInnerHTML","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAEe,SAASA,IACpB,OACI,iCAAQ,oDCAhB,IAAMC,EAASC,EAAQ,IACvBD,EAAOE,WAAW,CACdC,KAAK,EACLC,QAAQ,EACRC,WAAW,IAIR,IAAMC,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAOC,aAAaC,WCdjB,o9CDgBP,EAAKC,aAAe,SAACC,GACjB,EAAKC,SAAS,CACVL,MAAOI,EAAME,OAAOC,QAExBN,aAAaO,QAAQ,YAAaJ,EAAME,OAAOC,QAEnD,EAAKE,UAAY,WACb,EAAKJ,SAAS,CACVL,MAAO,KAEXC,aAAaO,QAAQ,YAAa,KAfvB,EADvB,0CAoBI,WAAU,IAAD,OAKL,OACI,qCACI,iCACI,uDAEJ,sBAAKE,UAAU,iBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOC,QAAQ,SAAf,oIACA,wBAAQC,QAASC,KAAKJ,UAAtB,4BACA,0BAAUK,GAAG,SAASP,MAAOM,KAAKd,MAAMC,MAAOe,SAAUF,KAAKV,kBAElE,qBAAKO,UAAU,cAAf,SACI,cAAC,EAAD,CAASM,SAfd,CAAEC,OAAQ1B,EAAO,EAAKQ,MAAMC,eAkB/B,cAACV,EAAD,WAxChB,GAA4B4B,aA8CtBC,EAAU,SAACrB,GACb,OACI,qBAAKgB,GAAG,UAAUM,wBAAyBtB,EAAMkB,YE/C1CK,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACI,cAAC,EAAD,OCIOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.dd38760a.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Footer() {\n    return (\n        <footer><p>Marco Costa 2021.</p></footer>\n    )\n}","import React, { Component } from 'react';\nimport initState from './initialize';\nimport Footer from './Footer';\n\nconst marked = require('marked');\nmarked.setOptions({\n    gfm: true,\n    breaks: true,\n    headerIds: false\n})\n\n\nexport class Parser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: localStorage.userInput || initState\n        }\n        this.handleChange = (event) => {\n            this.setState({\n                input: event.target.value\n            })\n            localStorage.setItem('userInput', event.target.value);\n        }\n        this.resetText = () => {\n            this.setState({\n                input: ''\n            })\n            localStorage.setItem('userInput', '');\n        }\n    }\n\n    render() {\n        const markUp = () => {\n            return { __html: marked(this.state.input) };\n        }\n\n        return (\n            <>\n                <header>\n                    <h1>Markdown previewer </h1>\n                </header>\n                <div className=\"flex-container\">\n                    <div className=\"flex-child1\">\n                        <label htmlFor=\"editor\">Edit the textarea to see your markdown parsed (after any edit, reset and reload the page to see the initial markdown).</label>\n                        <button onClick={this.resetText}>Reset markdown</button>\n                        <textarea id=\"editor\" value={this.state.input} onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"flex-child2\">\n                        <Preview markdown={markUp()}></Preview>\n                    </div>\n                </div>\n                <Footer />\n            </>\n        )\n    }\n}\n\nconst Preview = (props) => {\n    return (\n        <div id=\"preview\" dangerouslySetInnerHTML={props.markdown}></div>\n    )\n}\n\n","// initialize the state of the Editor component with a default markdown\n\nconst initState = \n`# Hello 👋👋👋,\n### and welcome to my little markdown previewer.\nIt uses [marked](https://marked.js.org/) to convert your markdown into HTML...how cool is that??  \n\nNow, we can easily do a bunch of stuff with this tool. \n\nLet's make a list:\n\n- this is an item in an unordered list;\n- this is *another one*, in italicized text;\n- we can have **bold items**, of course;\n- and, just because we can, an ordered list within an unordered list:\n    1. Lorem;\n    2. Ipsum;\n    3. Dolor;\n   \n\nA tasks list:\n\n- [x] something done\n- [ ] something to do\n- [ ] something else to do\n\nAnd a table:\n\n| Tables  |      Are      |  Cool   | \n|   ---   |      ---      |   ---   |\n|  item1  |     item2     |  item3  |\n|  item4  |     item5     |  item6  |    \n\n## But wait, there's more!\n\nWe can display inline code, as in \\`const square = (x) => x * x;\\`  and also code box, like so:\n~~~\nfunction App() {\n    return (\n      <div className=\"App\">\n        <Editor />\n        <Preview />\n      </div>\n    );\n}\n~~~\n\n\nWant to quote your favorite author? We got you covered!\n\n> “Self-education is, I firmly believe, the only kind of education there is.”\n>\n> *Isaac Asimov* \n\nLast but not least, we can also link to images!\n\nHave a look at the [Markdown Guide](https://www.markdownguide.org/) to see what else you can do.\n\n![A robot laying down on the side waving hello.](https://i.postimg.cc/z3mdq9BM/robot-01.jpg)\n`\n\nexport default initState;\n\n","import './style/App.css';\nimport React from 'react';\nimport { Parser } from './components/Parser';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Parser />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style/App.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}